renv::init()
renv::snapshot()
EEC_2019 <- read.csv2("FD_EEC_2019.csv",
header = TRUE, sep = ";", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
install.packages("xlsx")
install.packages("rJava")
library("xlsx")
mean(y <- 5)
y =5
y<-5
mean(x=5)
mean(x<-5)
mean(y=5)
nom_colonne <- colnames(EEC_2019)
class(EEC_2019)
class(nom_colonne)
nom_prenom <- paste0("Guillermin","Gaetan")
file.path(chemin_donne, "data")
chemin_donne <- paste0(chemin_donne,"/data/")
chemin_donne <- paste0(chemin_donne,"data/")
chemin_donne <- paste0(chemin_donne,"/data")
file.path("chemin", "data")
renv::restore()
library(knitr)
class(seq(from = 1, to = 20, by =2))
?seq
test <- seq(from = 1, to = 20, by =2)
?data.frame
df <- data.frame(prenom = c("prenom_1", "prenom_2", "prenom_3"),
age = c(52, 25, 10))
typeof(df)
class(df)
?typeof
typeof(2)
nouvel_objet <- df$prenom
df_iris <- iris
class(df_iris)
str(df_iris)
?arrange
library(dplyr)
?arrange
EEC_2019 <- read.csv2("FD_EEC_2019.csv",
header = TRUE, sep = ";", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
colnames(EEC_2019) # Nom des colonnes
View(EEC_2019)
library(openxlsx)
naf <- read.xlsx("naf2008_liste_n2.xls")
library(xlsx)
naf <- read.xls("naf2008_liste_n2.xls")
naf <- read.xlsx("naf2008_liste_n2.xlsx")
View(naf)
df_final <- EEC_2019 %>%
select(TRIM, ANNEE, AGE5, SEXE, ACTEU, RABS, CSTOTR, HHC6, EXTRIAN, ACTIF, NAFG088N) # Garder uniquement les variables contenues dans liste_variable
View(EEC_2019)
df_final <- EEC_2019 %>%
select(TRIM, ANNEE, AGE5, SEXE, ACTEU, RABS, CSTOTR, HHC6, EXTRIAN, ACTIF, NAFG088UN) # Garder uniquement les variables contenues dans liste_variable
calendrier <- load("racine/tronc/branche/calendrier.Rdata")
?read.xlsx
#install.packages("openxlsx) # Installation du package si nécessaire
library(openxlsx)
intitule_naf <- read.xlsx("naf2008_liste_n2.xlsx ",
startRow = 3)
View(naf)
View(intitule_naf)
View(naf)
View(intitule_naf)
View(intitule_naf)
df_final_inner <- df_final %>%
inner_join(intitule_naf, by = c("NAFG088UN" = "Code"))
?inner_join
df_final_inner <- df_final %>%
mutate(NAFG088UN = as.character(NAFG088UN)) %>%
inner_join(intitule_naf, by = join_by("NAFG088UN" == "Code"))
View(df_final_inner)
View(df_final)
df_final_left <- df_final %>%
mutate(NAFG088UN = as.character(NAFG088UN)) %>%
left_join(intitule_naf, by = join_by("NAFG088UN" == "Code"))
View(df_final_left)
df_final_full <- df_final %>%
mutate(NAFG088UN = as.character(NAFG088UN)) %>%
full_join(intitule_naf, by = join_by("NAFG088UN" == "Code"))
View(df_final_full)
save(df_final_left, "df.Rdata") # Enregistrement du dataframe
?save
save(df_final_left, file = "df.Rdata") # Enregistrement du dataframe
load("df.Rdata") # Chargement du dataframe
View(df)
df_charge <- load("df.Rdata") # Chargement du dataframe
df_charge
View(df_final_left)
save(df_final_left, file = "df.RData") # Enregistrement du dataframe
df_charge <- load("df.Rdata") # Chargement du dataframe
df_charge
save(df_final_left, file = "df.RData") # Enregistrement du dataframe
df_charge <- load("df.Rdata") # Chargement du dataframe
?save
write.xlsx(df_final_left, file = "df.xlsx") # Enregistrement du dataframe
df_charge <- read.xlsx("df.Rdata") # Chargement du dataframe
df_charge <- read.xlsx("df.xlsx") # Chargement du dataframe
View(df_charge)
summary(df_final) # Permet de connaitre les statistiques descriptives des variables du dataframe
library("Hmisc")
?wtd.sum
nb_individu <- df_final %>%
group_by(trimestre) %>%
summarise(effectifs = sum(POIDS))
#install.packages("dplyr") # Installation du package si besoin
library("dplyr") # Chargement du package : nécessaire à chaque début de session de travail dans R Studio
EEC_2019 <- read.csv2("FD_EEC_2019.csv",
header = TRUE,
sep = ";",
quote = "\"",
dec = ".",
fill = TRUE,
comment.char = "")
df_final <- EEC_2019 %>%
select(TRIM,
ANNEE,
AGE5,
SEXE,
ACTEU,
RABS,
CSTOTR,
HHC6,
EXTRIAN,
ACTIF,
NAFG088UN) # Garder uniquement les variables contenues dans liste_variable
... %>% mutate(trimestre = paste0(ANNEE,"-T",TRIM))
%>% mutate(trimestre = paste0(ANNEE,"-T",TRIM))
df_final <- EEC_2019 %>%
select(TRIM,
ANNEE,
AGE5,
SEXE,
ACTEU,
RABS,
CSTOTR,
HHC6,
EXTRIAN,
ACTIF,
NAFG088UN) # Garder uniquement les variables contenues dans liste_variable
%>% mutate(trimestre = paste0(ANNEE,"-T",TRIM))
df_final <- EEC_2019 %>%
select(TRIM,
ANNEE,
AGE5,
SEXE,
ACTEU,
RABS,
CSTOTR,
HHC6,
EXTRIAN,
ACTIF,
NAFG088UN) # Garder uniquement les variables contenues dans liste_variable %>% rename(POIDS = EXTRIAN)
df_final_left <- df_final %>%
mutate(NAFG088UN = as.character(NAFG088UN)) %>%
left_join(intitule_naf, by = join_by("NAFG088UN" == "Code"))
write.xlsx(df_final_left, file = "df.xlsx") # Enregistrement du dataframe
df_final <- read.xlsx("df.xlsx") # Chargement du dataframe
summary(df_final) # Permet de connaitre les statistiques descriptives des variables du dataframe
df_final <- df_final %>% rename(POIDS = EXTRIAN)
summary(df_final) # Permet de connaitre les statistiques descriptives des variables du dataframe
nb_individu <- df_final %>%
group_by(trimestre) %>%
summarise(effectifs = sum(POIDS))
df_final <- df_final %>% mutate(trimestre = paste0(ANNEE, "T", TRIM))
nb_individu <- df_final %>%
group_by(trimestre) %>%
summarise(effectifs = sum(POIDS))
nb_individu
df_final <- df_final %>% mutate(definition = case_when(ACTEU == "0" ~  "Sans objet",
ACTEU == "1" ~  "Actif occupé",
ACTEU == "2" ~  "Chômeur",
ACTEU == "3" ~  "Inactif",
TRUE ~ "Oubli"))
nb_individu = df_final %>%
group_by(Libellé) %>%
summarise(effectifs = sum(POIDS))
nb_individu
View(nb_individu)
test <- df_final %>%
group_by(trimestre, defintion) %>%
mutate(sum_actif = sum(POIDS)) %>%
ungroup()
test <- df_final %>%
group_by(trimestre, definition) %>%
mutate(sum_actif = sum(POIDS)) %>%
ungroup()
View(test)
?wtd.mode
wtd.table(x = df_final$TRIM, weights = POIDS)
wtd.table(x = df_final$TRIM, weights = df_final$POIDS)
chomage <- df_final %>%
group_by(trimestre, definition) %>%
summarise(effectif_actif_trim = sum(POIDS, na.rm = TRUE))
View(chomage)
taux_chomage <- chomage %>%
group_by(trimestre) %>%
mutate(effectif_total = sum(POIDS, na.rm = TRUE)) %>%
ungroup() %>%
mutate(taux = (effectif_actif_trim / effectif_total)*100)
taux_chomage <- chomage %>%
group_by(trimestre) %>%
mutate(effectif_total = sum(effectif_actif_trim, na.rm = TRUE)) %>%
ungroup() %>%
mutate(taux = (effectif_actif_trim / effectif_total)*100)
View(taux_chomage)
View(taux_chomage)
df_pivot <- nb_individu_trim_definition %>%
pivot_wider(names_from = c(ACTEU,definition), values_from = c(effectif,taux))
df_eff_trim_activite <- df_final %>%
group_by(trimestre, definition) %>%
summarise(effectifs = sum(POIDS))
df_eff_trim_activite
df_pivot <- df_eff_trim_activite %>%
pivot_wider(names_from = c(definition), values_from = c(effectifs))
library(tidyr)
df_pivot <- df_eff_trim_activite %>%
pivot_wider(names_from = c(definition), values_from = c(effectifs))
df_pivot
df_unpivot <- df_pivot %>%
pivot_longer(!c(trimestre), names_to = "definition", values_to = "effectifs")
df_unpivot
#install.packages(xlsx) # Installation du package
library(xlsx) # Chargement du package
wtd.table(x = df_final$TRIM, weights = df_final$POIDS)
defm <- read_sas("defm_trim.sas7bdat")
library(haven)
library(lubridate)
library(ggplot2)
library(dplyr)
library(tidyr)
defm <- read_sas("defm_trim.sas7bdat")
plot(defm$date, defm$defmA)
ggplot(defm, aes(x=date, y=defmA)) +
geom_line()
ggplot(defm, aes(x=date, y=defmA)) +
geom_line()+
ggtitle("Titre")
ggplot(defm) +
geom_line(aes(x=date, y=defmA))+
geom_line(aes(x=date, y=defmABC))+
ggtitle("Titre")
ggplot(defm, aes(x=trim, y=defmA)) +
geom_bar(stat = "identity")
ggplot(defm, aes(x=date, y=defmA)) +
geom_bar(stat = "identity")
ggplot(defm, aes(x=defmA)) +
geom_histogram()
